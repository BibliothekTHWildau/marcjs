#!/usr/bin/env node

var nopt   = require('nopt'),
    fs     = require('fs'),
    async  = require('async'),
    marcjs = require('marcjs');

var parsed = nopt(
    {
        "parser": ["iso2709","marcxml"],
        "formater": ["text","iso2709","marcxml","json"],
        "output": String,
        "help": Boolean
    },
    {
        "p": "--parser",
        "f": "--formater",
        "o": "--output"
    },
    process.argv, 2
);

function usage() {
    console.log(
        "Usage: marcjs -p iso2709|marcxml -f text|iso2709|marcjs -o result file1 file2"
    );
}

parsed.parser = parsed.parser || 'iso2709';
parsed.formater = parsed.formater || 'text';
if ( parsed.argv.remain.length === 0 ) {
    usage();
    process.exit(1);
}

var output = parsed.output ? fs.createWriteStream(parsed.output)
                           : process.stdout;
var writer = marcjs.getWriter(output, parsed.formater);
var tasks = [];
parsed.argv.remain.forEach(function(file) {
    tasks.push(function(callback) {
        var input = fs.createReadStream(file);
        var reader = marcjs.getReader(input, parsed.parser);
        reader.on('data', function(record) { writer.write(record); });
        reader.on('end', function() { callback(null); });
    });
});
async.series(tasks, function() { writer.end(); });
